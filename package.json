{
	"name": "ruby-spec-runner",
	"displayName": "Ruby Spec Runner",
	"description": "Run specific rspec & minitest tests from within vscode",
	"publisher": "Fooo",
	"repository": {
		"type": "git",
		"url": "https://github.com/foneandrew/ruby-spec-runner"
	},
	"icon": "images/icon.png",
	"license": "MIT",
	"version": "3.4.0",
	"engines": {
		"vscode": "^1.76.0"
	},
	"keywords": [
		"ruby tests",
		"rspec",
		"minitest"
	],
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onLanguage:ruby"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "ruby-spec-runner.runRspecOrMinitestFile",
				"title": "Ruby Spec Runner: Run this spec/minitest file"
			},
			{
				"command": "ruby-spec-runner.runRspecOrMinitestLine",
				"title": "Ruby Spec Runner: Run this line in rspec/minitest"
			},
			{
				"command": "ruby-spec-runner.runFailedExamples",
				"title": "Ruby Spec Runner: Re-run failed examples"
			},
			{
				"command": "ruby-spec-runner.clearResults",
				"title": "Ruby Spec Runner: Clear test results for this file"
			},
			{
				"command": "ruby-spec-runner.runAllExamples",
				"title": "Ruby Spec Runner: Run all examples"
			}
		],
		"keybindings": [
			{
				"command": "ruby-spec-runner.runRspecOrMinitestLine",
				"key": "ctrl+alt+/",
				"mac": "ctrl+cmd+/",
				"when": "editorLangId == 'ruby'"
			},
			{
				"command": "ruby-spec-runner.runRspecOrMinitestFile",
				"key": "ctrl+shift+alt+/",
				"mac": "ctrl+shift+cmd+/",
				"when": "editorLangId == 'ruby'"
			}
		],
		"configuration": {
			"title": "Ruby Spec Runner",
			"properties": {
				"ruby-spec-runner.rspecCommand": {
					"type": "string",
					"default": "",
					"markdownDescription": "Rspec: Provide an alternative rspec command. For example you may need to use a different path to rspec.\n\nCan also be used to disable code coverage by passing env vars. Example: `SKIP_COVERAGE=true bundle exec rspec`.",
					"scope": "window"
				},
				"ruby-spec-runner.minitestCommand": {
					"type": "string",
					"default": "",
					"markdownDescription": "Minitest: Provide an alternative minitest command. For example you may need to use a different path to minitest.\n\nCan also be used to disable code coverage by passing env vars. Example: `SKIP_COVERAGE=true bundle exec rails t`.",
					"scope": "window"
				},
				"ruby-spec-runner.changeDirectoryToWorkspaceRoot": {
					"type": "boolean",
					"default": true,
					"description": "Changes directory to workspace root before running the spec",
					"scope": "window"
				},
				"ruby-spec-runner.projectPath": {
					"type": "string",
					"default": "",
					"description": "Absolute path to project directory (e.g. /home/me/project/sub-folder). Defaults to the workspace directory.",
					"scope": "window"
				},
				"ruby-spec-runner.rspecFormat": {
					"type": "string",
					"enum": [
						"Documentation",
						"Progress"
					],
					"default": "Progress",
					"markdownDescription": "Rspec: Output format for rspec.\n\n- **Documentation:** group and example names\n- **Progress:** dots for each example",
					"scope": "window"
				},
				"ruby-spec-runner.saveBeforeRunning": {
					"type": "boolean",
					"default": true,
					"description": "Save the file before running the spec/test",
					"scope": "window"
				},
				"ruby-spec-runner.rspecRunButton": {
					"type": "boolean",
					"default": true,
					"description": "Rspec: Show a status bar button to run the current spec file",
					"scope": "window"
				},
				"ruby-spec-runner.rspecRunAllFailedButton": {
					"type": "boolean",
					"default": false,
					"description": "Rspec: Show a status bar button to re-run the failed examples for the current spec file",
					"scope": "window"
				},
				"ruby-spec-runner.minitestRunButton": {
					"type": "boolean",
					"default": true,
					"description": "Minitest: Show a status bar button to run the current minitest file",
					"scope": "window"
				},
				"ruby-spec-runner.rspecCodeLensPrompts": {
					"type": "boolean",
					"default": true,
					"description": "Rspec: Show code lens prompts to run specific examples or contexts in the editor",
					"scope": "window"
				},
				"ruby-spec-runner.minitestCodeLensPrompts": {
					"type": "boolean",
					"default": true,
					"description": "Minitest: Show code lens prompts to run specific examples or contexts in the editor",
					"scope": "window"
				},
				"ruby-spec-runner.rspecDecorateEditorWithResults": {
					"type": "boolean",
					"default": true,
					"description": "Rspec: Highlight errors, show spec results in the gutter, and highlighting in the overview ruler.",
					"scope": "window"
				},
				"ruby-spec-runner.rspecDecorateEditorWithStaleResults": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Rspec: Display stale results in the editor gutter and overview ruler. Disable to hide stale results. Only applies when `Rspec Decorate Editor With Results` is enabled.",
					"scope": "window"
				},
				"ruby-spec-runner.minitestDecorateEditorWithResults": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Minitest: Highlight errors, show spec results in the gutter, and highlighting in the overview ruler.\n\n**Windows users: turn this off if the minitest command is failing or check the spec runner windowsTerminalType configuration.**",
					"scope": "window"
				},
				"ruby-spec-runner.minitestDecorateEditorWithStaleResults": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Minitest: Display stale results in the editor gutter and overview ruler. Disable to hide stale results. Only applies when `Minitest Decorate Editor With Results` is enabled.",
					"scope": "window"
				},
				"ruby-spec-runner.windowsTerminalType": {
					"type": "string",
					"enum": [
						"Bash",
						"Powershell"
					],
					"default": "Powershell",
					"markdownDescription": "Select the vscode default terminal for windows machines. Affects the command used for minitest editor decoration.",
					"scope": "window"
				},
				"ruby-spec-runner.overviewHighlightPosition": {
					"type": "string",
					"enum": [
						"Left",
						"Right",
						"Center"
					],
					"default": "Left",
					"markdownDescription": "Select which side test results appear in the overview ruler. Can be useful if another extension uses a particular side of the overview ruler (eg git lens). Only applies when editor decorations are on.\n\n_(Does not apply to line failures which are always full width)_",
					"scope": "window"
				},
				"ruby-spec-runner.clearTerminalOnTestRun": {
					"type": "string",
					"enum": [
						"Clear",
						"Do not clear"
					],
					"default": "Clear",
					"markdownDescription": "Before a test command is executed the previous terminal output can be cleared. \n\n- **Clear:** Clear the terminal output\n- **Do not clear:** Do not clear the terminal output (allow scrollback)",
					"scope": "window"
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "yarn run package",
		"compile": "webpack",
		"watch": "webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"compile-tests": "tsc -p . --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/node": "18.14.6",
		"@types/tmp": "^0.2.3",
		"@types/vscode": "^1.76.0",
		"@typescript-eslint/eslint-plugin": "^5.54.1",
		"@typescript-eslint/parser": "^5.54.1",
		"eslint": "^8.35.0",
		"node-loader": "^2.0.0",
		"ts-loader": "^9.4.2",
		"typescript": "^4.9.5",
		"webpack": "^5.75.0",
		"webpack-cli": "^5.0.1"
	},
	"dependencies": {
		"chokidar": "^3.5.3",
		"tmp": "^0.2.1"
	}
}
